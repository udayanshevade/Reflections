Q1_ What happens when you initialize a repository? Why do you need to do it?
A_ A .git file is created and meta data regarding the repository is stored. No commits are initially made and the files are untracked. You must add which files are to be tracked manually. This allows you to choose which files to store.

Q2_ How can you use the staging area to make sure you have one commit per logical change?
A_ The staging area allows us to check what files are being tracked, changed or committed. It acts as an intermediate step before creating a commit, which provides more control. You can compare files in the staging area with the repository, to confirm what changes you want to commit. You can also compare the staging area with the working directory, to see if any files have changed or need to be added.

Q3_ What are some situations when branches would be helpful in keeping your history organized? How would branches help?
A_ Branches are useful for trying out new lines of thought. If you're experimenting with a large or overall change and want to preserve your other progress, branching allows easy access to versions that would otherwise be hard to keep track of and maintain.

Q4_ How do the diagrams help you visualize the branch structure?
A_ Since the structure is prone to complexity, it is a good idea to visualize the branches using a diagram. Being able to trace parents, identify key nodes are all good consequences of thinking this way.

Q5_ What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
A_ Merging the two branches makes a new commit which references both files as its parents. The different files are then summed together.

Q6_ What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
A_ While automatic merging takes care of the gritty work for you, it can also potentially lead to errors and conflicts. There is no obvious goal-oriented procedure for merging for machines yet, so doing merges manually might be safer with more sensitive work.